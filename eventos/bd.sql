create database EVENTOS;
use EVENTOS;

create table USUARIO
(
ID_USUARIO int(10) NOT NULL AUTO_INCREMENT,
NOMBRE varchar(45),
APELLIDOS varchar(45),
SEXO ENUM('MASCULINO','FEMENINO'),
FECHA_NAC date,
EMAIL varchar(45) NOT NULL,
TELEFONO varchar(45),
DIRECCION varchar(60),
RFC varchar(45),
USERNAME varchar(45) NOT NULL,
PASSWORD varchar(255) NOT NULL,
ACTIVO boolean  NOT NULL DEFAULT '0',
PRIMARY KEY (ID_USUARIO)
); 

create table LUGAR
(
ID_LUGAR int(11) NOT NULL AUTO_INCREMENT,
NOMBRE varchar(60) NOT NULL,
CALLE varchar(45) NOT NULL,
N_EXT int(7) NOT NULL,
TELEFONO varchar(15) NOT NULL,
EMAIL varchar(45) NOT NULL,
LATITUD FLOAT(100,6) NOT NULL,
LONGITUD FLOAT(100,6) NOT NULL,
PRIMARY KEY (ID_LUGAR)
);

create table BOLETO
(
ID_BOLETO int(11) NOT NULL AUTO_INCREMENT,
PRECIO FLOAT(7,2) NOT NULL,
NINO int(11) NOT NULL,
ESTUDIANTE int(11)NOT NULL,
VEJEZ int(11) NOT NULL,
ADULTO int(11) NOT NULL,
PRIMARY KEY (ID_BOLETO)
);

create table EVENTO
(
ID_EVENTO int(11) NOT NULL AUTO_INCREMENT,
ID_BOLETO int(11) NOT NULL,
TITULO varchar(35) NOT NULL,
TIPO_EVENTO ENUM('TEATRO','CINE','EXP_ARTISTICA','MUSICAL') NOT NULL,
ID_LUGAR int(11) NOT NULL,
FECHA_INICIO date NOT NULL,
FECHA_FIN date NOT NULL,
ARTISTA varchar(45) NOT NULL,
ANTECEDENTES varchar(255) NOT NULL,
RESENA varchar(255) NOT NULL,
PRIMARY KEY (ID_EVENTO),
FOREIGN KEY(ID_LUGAR) REFERENCES LUGAR(ID_LUGAR),
FOREIGN KEY(ID_BOLETO) REFERENCES  BOLETO(ID_BOLETO)
);

create table PARTIDA_EVENTO
(
ID_EVENTO int(11) NOT NULL,
N_SALA int(11) NOT NULL,
HORA_INICIO time NOT NULL,
HORA_FIN time NOT NULL,
CAPACIDAD int(11) NOT NULL,
PRIMARY KEY (ID_EVENTO,N_SALA),
FOREIGN KEY(ID_EVENTO) REFERENCES EVENTO(ID_EVENTO)
);

create table VENTA
(
FOLIO int(11) NOT NULL AUTO_INCREMENT,
ID_USUARIO int(11) NOT NULL,
ID_EVENTO int(11)  NOT NULL,
N_SALA int(11) NOT NULL,
FECHA_VENTA date NOT NULL,
PRIMARY KEY (FOLIO),
FOREIGN KEY(ID_USUARIO) REFERENCES USUARIO(ID_USUARIO),
FOREIGN KEY(ID_EVENTO) REFERENCES EVENTO (ID_EVENTO)
);

create table PARTIDA_VENTA
(
FOLIO int(11) NOT NULL,
N_REGISTRO int(11) NOT NULL,
ID_BOLETO int(11) NOT NULL,
CANTIDAD int(11) NOT NULL,
TIPO enum('nino','adulto','vejez','estudiante') NOT NULL,  
PRIMARY KEY (FOLIO,N_REGISTRO),                         
FOREIGN KEY(FOLIO) REFERENCES VENTA(FOLIO)
);

create table PUBLICIDAD
(
ID_PUBLICIDAD int(11) NOT NULL AUTO_INCREMENT,
ID_EVENTO int(11) NOT NULL,
FECHA_INICIO date NOT NULL,
FECHA_FIN date NOT NULL,
URL_IMAGEN varchar(255) NOT NULL,
PRIMARY KEY (ID_PUBLICIDAD),
FOREIGN KEY(ID_EVENTO) REFERENCES EVENTO(ID_EVENTO)
);

create table ESPECTACULAR
(
ID_ESPECTACULAR int(11) NOT NULL AUTO_INCREMENT,
UBICACION varchar(255) NOT NULL,
LATITUD FLOAT(6,2) NOT NULL,
LONGITUD FLOAT(6,2) NOT NULL,
ZONA ENUM('NORTE','SUR','ESTE','OESTE') NOT NULL,
TIPO ENUM('CARTEL','MAMPARA','ESPECTACULAR') NOT NULL,
PRIMARY KEY (ID_ESPECTACULAR)
);

create table REG_PUBLICIDAD
(
ID_PUBLICIDAD int(11) NOT NULL,
ID_ESPECTACULAR int(11) NOT NULL,
ACTIVO boolean DEFAULT '1' NOT NULL,
PRIMARY KEY (ID_PUBLICIDAD,ID_ESPECTACULAR),
FOREIGN KEY(ID_PUBLICIDAD) REFERENCES PUBLICIDAD(ID_PUBLICIDAD),
FOREIGN KEY(ID_ESPECTACULAR) REFERENCES ESPECTACULAR(ID_ESPECTACULAR)
);

############################
############################


SELECT EV.ID_EVENTO,EV.TITULO,EV.TIPO_EVENTO,EV.FECHA_INICIO,EV.FECHA_FIN,
EV.ARTISTA,EV.ANTECEDENTES,EV.RESENA, LG.CALLE, LG.N_EXT,LG.TELEFONO,LG.EMAIL,
LG.LATITUD,LG.LONGITUD FROM EVENTO  AS EV INNER JOIN LUGAR AS LG  ON LG.ID_LUGAR=EV.ID_LUGAR;


-- ESTA CONSULTA SE REALIZA AL DIBUJAR TODAS LOS ELEMENTOS DEL TABLERO
SELECT EV.ID_EVENTO,EV.TITULO,EV.FECHA_INICIO,EV.FECHA_FIN,EV.RESENA, 
PU.URL_IMAGEN FROM PUBLICIDAD as PU INNER JOIN EVENTO as EV ON EV.ID_EVENTO=PU.ID_EVENTO WHERE PU.FECHA_INICIO<=CURDATE() AND PU.FECHA_FIN>=CURDATE();
-- modelo PartidaEvento metodo getFunciones
SELECT PV.N_SALA ,PV.CAPACIDAD, PV.HORA_INICIO,PV.HORA_FIN ,BL.PRECIO,BL.NINO,
BL.ESTUDIANTE,BL.VEJEZ,BL.ADULTO FROM PARTIDA_EVENTO as PV
 INNER JOIN EVENTO as EV ON EV.ID_EVENTO=PV.ID_EVENTO 
 INNER JOIN BOLETO as BL ON EV.ID_BOLETO=BL.ID_BOLETO
 WHERE PV.ID_EVENTO=2;


SELECT CANTIDAD FROM VENTA as V INNER JOIN PARTIDA_VENTA as PV ON  PV.FOLIO=V.FOLIO WHERE V.ID_EVENTO=7;

-- modelo Evento metodo getInfoEvento
SELECT EV.TITULO , PV.HORA_INICIO , PV.HORA_FIN ,BL.PRECIO , BL.NINO, BL.ESTUDIANTE, BL.VEJEZ, BL.ADULTO, PV.CAPACIDAD
FROM PARTIDA_EVENTO AS PV INNER JOIN EVENTO AS EV ON EV.ID_EVENTO=PV.ID_EVENTO
INNER JOIN BOLETO AS BL ON BL.ID_BOLETO=EV.ID_BOLETO WHERE PV.ID_EVENTO=6;


SELECT LG.CALLE , LG.N_EXT , LG.TELEFONO , LG.EMAIL , LG.LATITUD , LG.LONGITUD 
FROM EVENTO AS EV INNER JOIN LUGAR AS LG ON LG.ID_LUGAR=EV.ID_LUGAR
WHERE EV.ID_EVENTO=7;


SELECT EV.ID_EVENTO,EV.TITULO, LG.NOMBRE ,EV.FECHA_INICIO ,EV.FECHA_FIN FROM EVENTO AS EV 
INNER JOIN LUGAR AS LG ON LG.ID_LUGAR=EV.ID_LUGAR;


SELECT NOMBRE , APELLIDOS , SEXO , FECHA_NAC , EMAIL , TELEFONO,
DIRECCION , RFC FROM USUARIO WHERE ID_USUARIO=101;



-- modelo Evento metodo getBoleto
SELECT BL.* FROM EVENTO AS EV INNER JOIN BOLETO AS BL
 ON BL.ID_BOLETO=EV.ID_BOLETO WHERE ID_EVENTO=59;

-- modelo PUBLICIDAD metodo getActivos
SELECT EV.ID_EVENTO, PB.ID_PUBLICIDAD, EV.TITULO ,PB.FECHA_INICIO,PB.FECHA_FIN,
PB.URL_IMAGEN FROM EVENTO AS EV INNER JOIN PUBLICIDAD AS PB ON EV.ID_EVENTO=PB.ID_EVENTO
WHERE PB.FECHA_INICIO>=CURDATE() AND PB.FECHA_FIN>=CURDATE();

-- modelo Espectacular metodo getInfoAll
SELECT * FROM ESPECTACULAR;

-- modelo Evento metodo getActivos

SELECT ID_EVENTO, TITULO FROM EVENTO;


-- modelo Usuario metodo infoEdades

SELECT FECHA_NAC FROM USUARIO ORDER BY FECHA_NAC;


SELECT TIPO,CANTIDAD FROM PARTIDA_VENTA ORDER BY TIPO;

-- Buscador
SELECT * FROM EVENTO WHERE TITULO LIKE "Off%";

SELECT EV.TITULO FROM EVENTO AS EV INNER JOIN PUBLICIDAD AS PU
ON PU.ID_EVENTO=EV.ID_EVENTO WHERE TITULO LIKE 'Off%' AND 
PU.FECHA_INICIO>=CURDATE() AND PU.FECHA_FIN>=CURDATE();

-- Obtener los eventos mas y menos vendidos de la semana
SELECT EV.ID_EVENTO,EV.TITULO, PV.CANTIDAD FROM VENTA AS VT INNER JOIN PARTIDA_VENTA 
 AS PV ON PV.FOLIO=VT.FOLIO INNER JOIN EVENTO AS EV ON VT.ID_EVENTO=EV.ID_EVENTO
  WHERE EV.FECHA_INICIO<=DATE_SUB(CURDATE(),INTERVAL 1 WEEK) AND EV.FECHA_FIN>=CURDATE();

-- obtener dispobilidad de boletos
SELECT PV.CANTIDAD,PE.CAPACIDAD FROM VENTA AS VT INNER JOIN PARTIDA_VENTA 
AS PV ON PV.FOLIO=VT.FOLIO INNER JOIN PARTIDA_EVENTO AS PE ON VT.ID_EVENTO=PE.ID_EVENTO
 WHERE VT.ID_EVENTO=12 AND VT.N_SALA=12;

-- obtener las ventas por dia
SELECT EV.ID_EVENTO,EV.TITULO, PV.CANTIDAD,VT.FECHA_VENTA FROM VENTA AS VT INNER JOIN PARTIDA_VENTA 
AS PV ON PV.FOLIO=VT.FOLIO INNER JOIN EVENTO AS EV ON VT.ID_EVENTO=EV.ID_EVENTO WHERE EV.ID_EVENTO=12 AND
VT.FECHA_VENTA>=DATE_SUB(CURDATE(),INTERVAL 1 WEEK) ORDER BY VT.FECHA_VENTA;

-- modelo Usuario metodo infoEdades
SELECT FECHA_NAC FROM USUARIO ORDER BY FECHA_NAC;